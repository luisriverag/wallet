name: CI
on:
  pull_request:
    branches: ['**']
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    if: >
      !contains(github.event.head_commit.message, '#skip-ci')
    runs-on: ubuntu-latest
    steps:

    - name: Install deps
      run: sudo apt-get install -y unzip diffutils

    - name: Set up JDK environment
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: wrapper
        cache-read-only: false

    - name: Cache Gradle files
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - run: ./gradlew --no-daemon --build-cache --parallel --configure-on-demand clean test mbw:assembleProdnetDebug mbw:assembleBtctestnetDebug

    - uses: actions/upload-artifact@v4
      with:
        path: |
          mbw/build/outputs/apk/
          mbw/build/outputs/native-debug-symbols/

    - name: Check Target SDK
      run: |
        target_sdk=$(/usr/local/lib/android/sdk/cmdline-tools/latest/bin/apkanalyzer manifest target-sdk mbw/build/outputs/apk/prodnet/debug/mbw-prodnet-debug.apk)
        echo "$target_sdk" | grep "^36$"

    - run: mv mbw/build/outputs/apk /tmp/buildA

    - name: Reproduce build
      run: |
        git reset --hard HEAD
        git clean -dfx

        cd fiosdk_kotlin
        git reset --hard HEAD
        git clean -dfx

        cd ../wallet-android-modularization-tools
        git reset --hard HEAD
        git clean -dfx

        cd ..
        ./gradlew --no-daemon --build-cache --parallel --configure-on-demand clean mbw:assembleProdnetDebug

    - name: Unzip buildA
      run: unzip -d buildA -qq /tmp/buildA/prodnet/debug/mbw-prodnet-debug.apk

    - name: Unzip buildB
      run: unzip -d buildB -qq mbw/build/outputs/apk/prodnet/debug/mbw-prodnet-debug.apk

    - name: Compare builds
      run: |
        set -x;
        diffResult=$( diff --brief --recursive buildA buildB ) && diffExactlyTheSame=true;
        diffCount=$( echo "$diffResult" | grep -vcE "(META-INF|^$)" ) && diffSignificant=true;
        if ((diffCount != 0)); then
          exit 1;
        fi
